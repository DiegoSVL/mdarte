// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: GenericLoginModule.vsl in andromda-ejb-cartridge.
//

#set ($generatedFile = "GenericLoginModule.java")
#if($stringUtils.isNotEmpty($controleAcessoDir))
package $controleAcessoDir;
#set ($generatedFile = "${stringUtils.replace($controleAcessoDir,'.','/')}/${generatedFile}")
#end
## avoiding parse errors
#set ($sharp = "#")

import java.security.acl.Group;
import java.util.Map;
import javax.security.auth.Subject;
import javax.security.auth.callback.CallbackHandler;
import javax.security.auth.login.LoginException;
import org.jboss.security.auth.spi.UsernamePasswordLoginModule;

public abstract class GenericLoginModule extends UsernamePasswordLoginModule {
	
	abstract public void handleInitialize(Subject subject, CallbackHandler callbackHandler, Map sharedState, Map options);

	abstract protected String handleGetUsersPassword() throws LoginException;

	abstract protected Group[] handleGetRoleSets() throws LoginException;

	/**
	 * @see org.jboss.security.auth.spi.UsernamePasswordLoginModule${sharp}initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
	 */
	public void initialize(Subject subject, CallbackHandler callbackHandler, Map sharedState, Map options) {
		super.initialize(subject, callbackHandler, sharedState, options);
		
		handleInitialize(subject, callbackHandler, sharedState, options);
	}

	/**
	 * @see org.jboss.security.auth.spi.UsernamePasswordLoginModule${sharp}getUsersPassword()
	 */
	protected String getUsersPassword() throws LoginException {
		return handleGetUsersPassword();
	}

	/**
	 * @see org.jboss.security.auth.spi.AbstractServerLoginModule${sharp}getRoleSets()
	 */
	protected Group[] getRoleSets() throws LoginException {
		return handleGetRoleSets();
	}

}