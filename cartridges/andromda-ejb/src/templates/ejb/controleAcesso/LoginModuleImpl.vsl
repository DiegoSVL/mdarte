// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: LoginModuleImpl.vsl in andromda-ejb-cartridge.
//

#set ($generatedFile = "LoginModuleImpl.java")
#if($stringUtils.isNotEmpty($controleAcessoDir))
package $controleAcessoDir;
#set ($generatedFile = "${stringUtils.replace($controleAcessoDir,'.','/')}/${generatedFile}")
#end

import java.security.acl.Group;
import java.util.ArrayList;
import java.util.Enumeration;
import javax.security.auth.login.LoginException;
import org.jboss.security.SimpleGroup;
import org.jboss.security.auth.spi.DatabaseServerLoginModule;
import accessControl.Operador;
import accessControl.Perfil;
import accessControl.PrincipalImpl;

#set ($package = "${stringUtils.replace($utilDir,'/','.')}")
import ${customTypesPackage}.${package}.Constantes;

public class LoginModuleImpl extends DatabaseServerLoginModule {
	
	   protected Group[] getRoleSets() throws LoginException
	   {
	      try
	      {	    
	    	  ControleAcessoImpl controleAcesso = new ControleAcessoImpl();
	    	  Operador operador = controleAcesso.getOperador(getUsername());
	    	  
	    	  java.util.Collection<Perfil> listaPerfis = new ArrayList<Perfil>();
	    	 	    	  
	    	  Group roles = new SimpleGroup(Constantes.ROLES);
	    	  
		      Group[] g = super.getRoleSets();
		      SimpleGroup simpleGroup = (SimpleGroup) g[0];
		      Enumeration e = simpleGroup.members();
		      while(e.hasMoreElements()){
		    	  PrincipalImpl nextPrincipal = (PrincipalImpl) e.nextElement();
		    	  roles.addMember(nextPrincipal);
		    	  Perfil perfil = new Perfil();
		    	  perfil.setNome(nextPrincipal.getName());
		    	  listaPerfis.add(perfil);		    	  
		      }		  
		      
		     Group callerPrincipal = new SimpleGroup(Constantes.CALLER_PRINCIPAL);
	         PrincipalImpl principalImpl = new PrincipalImpl(getUsername());
	         principalImpl.setPerfis(listaPerfis);
	         principalImpl.setOperador(operador);
	         callerPrincipal.addMember(principalImpl);
	         	         
	         Group[] groups = {roles, callerPrincipal};	         
	         
	         return groups;
	      }
	      catch (Exception e)
	      {	         
	         throw new LoginException(e.toString());
	      }
	   }
}

