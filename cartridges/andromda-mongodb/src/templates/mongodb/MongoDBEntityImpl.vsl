#set ($generatedFile = "${entity.packagePath}/${entity.entityName}MongoDBImpl.java")
#set ($gerar = false)
#if($entity.document)
#set ($gerar = true)
#end
#if($gerar)
// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: MongoDBEntityImpl.vsl in andromda-mongodb-cartridge.
//
#if ($stringUtils.isNotBlank($entity.packageName))
package $entity.packageName;
#end

#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))

/**
 * @see $entity.fullyQualifiedEntityName
 */
    
public#if ($entity.abstract) abstract#end class  ${entity.entityName}MongoDBImpl
			extends ${entity.fullyQualifiedEntityName}MongoDBAbstract
{
    /** 
     * The serial version UID of this class. Needed for serialization. 
     */
    private static final long serialVersionUID = ${entity.serialVersionUID}L;
        
    public ${entity.entityName}MongoDBImpl()  {
    		
    }  
    	        
#set ($typeTargetTO = $stringUtils.replace(${entity.fullyQualifiedName}, ".${modelPackageName}.", ".${transferPackageName}."))       
    
#set ($identifiers = $entity.getIdentifiers(false))
    
#if(!$entity.abstract && $identifiers.size > 0)
    public ${entity.entityName}(){
       super();
    }

    #renderConstructorImplMethod($entity $entity.entityName $identifiers)
#end

#foreach ($associationEnd in $entity.associationEnds)
#set ($target = $associationEnd.otherEnd)
#if ($target.navigable || ($associationEnd.child && $entity.foreignHibernateGeneratorClass))
#if ($target.navigable)
#set($exception = "")
    public void ${target.setterName}Inverse($target.getterSetterTypeName ${target.name}) #if($stringUtils.empty($exception))throws $exceptionList#end {}
#end
#if($target.many)
#set($exception = "")

    public void add${stringUtils.capitalize($target.name)}(${target.type.fullyQualifiedName}MongoDB ${stringUtils.uncapitalize($target.type.name)}Temp) #if($stringUtils.empty($exception))throws $exceptionList#end {}

    public void remove${stringUtils.capitalize($target.name)}(${target.type.fullyQualifiedName}MongoDB ${stringUtils.uncapitalize($target.type.name)}Temp) #if($stringUtils.empty($exception))throws $exceptionList#end {}

#end

#if($target.findTaggedValue($throwsVetoException).equals("true"))
#set($exceptionList = "java.beans.PropertyVetoException")
#else
#set($exceptionList = "")
#end
	
	/*public ${target.getterSetterTypeName} ${target.getterName}() #if($stringUtils.empty($exceptionList))throws $exceptionList#end{
		return null;
	}

	public void ${target.setterName}($target.getterSetterTypeName ${target.name}) #if($stringUtils.empty($exceptionList))throws $exceptionList#end{
	
	}*/
#end
#end

}    
#end