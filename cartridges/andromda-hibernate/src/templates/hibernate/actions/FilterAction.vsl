#set ($generatedFile = "FilterAction.java")
#if($stringUtils.isNotEmpty($customTypesPackage))
package $customTypesPackage.${actionPackageName};
#set ($generatedFile = "${stringUtils.replace($customTypesPackage,'.','/')}/${actionPackageName}/${generatedFile}")
#end
#set ($util = "${stringUtils.replace($utilDir,'/','.')}")

import ${customTypesPackage}.${modelPackageName}.AbstractDAO;
import ${customTypesPackage}.${modelPackageName}.DAOException;
import ${customTypesPackage}.${modelPackageName}.AbstractEntity;
import br.ufrj.coppetec.DataObject;
import br.ufrj.coppetec.ValueObject;
import ${customTypesPackage}.${util}.Constantes;
import ${customTypesPackage}.${modelPackageName}.PagingVO;

public class FilterAction extends Action {

	private DataObject vo;
	private Integer paginacao;
	private Integer linhas;
	private Integer paginas;
	private Boolean defaultValues;
	
	
	public FilterAction(){
		this.vo = null;
		this.paginacao = null;
		this.paginas = null;
		this.linhas = null;
		this.defaultValues = true;
	}
	
	public FilterAction(DataObject vo, Integer paginacao){
		this.vo = vo;
		this.paginacao = paginacao;
		this.paginas = Constantes.TABLE_PAGES;
		this.linhas = Constantes.TABLE_LINES;
		this.defaultValues = true;
	}
	
	public FilterAction(DataObject vo, Integer paginacao, Integer linhas, Integer paginas) {
		this.vo = vo;
		this.paginacao = paginacao;
		this.linhas = linhas;
		this.paginas = paginas;
		this.defaultValues = false;
	}
	
	protected java.util.List<AbstractEntity> execute(AbstractEntity to, AbstractDAO dao) throws DAOException {
		return this.defaultValues ? dao.filter(vo, paginacao, null) : dao.filter(vo,paginacao,linhas,paginas);
	}
		
	public DataObject getVo(){
		return this.vo;
	}

	public Integer getPaginacao(){
		return this.paginacao;
	}
	
	public Integer getLinhas() {
		return this.linhas;
	}

	public java.util.List<AbstractEntity> execute(AbstractEntity to, AbstractDAO dao, Integer numeroElemPorPagina) throws DAOException {
		return dao.filter(vo, paginacao, numeroElemPorPagina);
	}
	
	public PagingVO pagingExecute(AbstractEntity to, AbstractDAO dao, Integer numeroElemPorPagina) throws DAOException {
		return dao.pagingFilter(vo, paginacao, numeroElemPorPagina);
	}
	

	public Integer getPaginas() {
		return this.paginas;
	}
	
	public Boolean defaultValues() {
		return this.defaultValues;
	}
}
