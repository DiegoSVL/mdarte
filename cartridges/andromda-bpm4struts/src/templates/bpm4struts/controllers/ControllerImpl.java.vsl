#set ($generatedFile = "${controller.fullPath}Impl.java")
##
##  CONSTANTS
##
#set ($quote = '"')
#set ($controllerPackageName = $controller.packageName)
#set ($controllerClassName = $controller.name)
#set ($useCase = $controller.useCase)
##
##  START TEMPLATE
##
#set ($sessionObjects = $controller.sessionObjects)
#set($gerar = false)
#if(${controller.useCase.useCaseOldStruts})
#set($gerar = true)
#end
#if($gerar)
// license-header java merge-point
package $controllerPackageName;

import org.apache.struts.action.ActionMapping;
#set ($package = "${stringUtils.replace($utilDir,'/','.')}")
import ${customTypesPackage}.${package}.Constantes;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
##
#set ($sharp = "#")

/**
 * @see ${controllerPackageName}.${controllerClassName}
 */
public class ${controllerClassName}Impl extends ${controllerClassName}
{
#foreach ($operation in $controller.operations)
#set ($visibility = $operation.visibility)
#set ($returnType = $operation.returnType.fullyQualifiedName)
#if (!$returnType)
#set ($returnType = "void")
#end
    /**
     * @see ${controllerPackageName}.${controllerClassName}${sharp}${operation.name}(org.apache.struts.action.ActionMapping, $operation.interfaceType, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
     */
    $visibility final $returnType ${operation.name}(ActionMapping mapping, $operation.interfaceType form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {
		/*Caso seja necessario usar paginacao		
    		Integer pagina = (((Integer)request.getAttribute(Constantes.PARAMETRO_PAGINA)));
			${customTypesPackage}.${package}.PaginationDisplaytag paginacao = new ${customTypesPackage}.${package}.PaginationDisplaytag(pagina);
		*/
	
#set($allowDummyData = ($dummyData == 'true'))
#if ($allowDummyData)
#set ($formFields = $operation.formFields)
#if ($formFields.empty)
        // nothing to be done for this operation, there are no properties that can be set
#else
#foreach ($field in $formFields)
#set ($tableActionFound = false)
#foreach ($action in $operation.deferringActions)
#if($action.tableAction)#foreach($parameter in $action.actionParameters)#if($parameter.name==$field.name)#set($tableActionFound=true)#end#end#end
#end

#if ($field.table)
        // populating the table with a dummy list
        form.${field.setterName}(${field.name}DummyList);

#elseif ($field.date)
        // setting a date
        form.${field.setterName}AsDate($field.resetValue);
#elseif ($tableActionFound)
        // we don't set row selection parameters such as ${field.name}RowSelection
#elseif ($field.type.arrayType)
        // this property receives a default value, just to have the application running on dummy data
        form.${field.setterName}(($field.type.fullyQualifiedName) $field.resetValue);
#else
        // this property receives a default value, just to have the application running on dummy data
        form.${field.setterName}($field.resetValue);
#end
#if ($field.selectable)
#set ($valueListMethod = $stringUtils.capitalize($field.valueListName))
#set ($labelListMethod = $stringUtils.capitalize($field.labelListName))
        form.set${valueListMethod}($field.valueListResetValue);
        form.set${labelListMethod}(form.get${valueListMethod}());
#end
#end
#end
#end
#if ($returnType != "void")
#if ($returnType=="boolean")
        return false;
#elseif ($operation.returnType.primitive)
        return 0;
#else
        return null;
#end
#end
    }
#set ($returnType = false)

#end
}
#end

