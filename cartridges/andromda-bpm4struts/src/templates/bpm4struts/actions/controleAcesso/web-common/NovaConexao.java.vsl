// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: NovaConexao.java.vsl in andromda-bpm4struts-cartridge-coppetec.
//
package $controleAcessoDir;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import java.lang.reflect.Field;
import java.util.Set;
#set ($packageUtil = "${stringUtils.replace($utilDir,'/','.')}")
import ${packageUtil}.Constantes;

public class NovaConexao extends Action {

	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
	{    	
    	java.util.Properties ports = new java.util.Properties();
    	
    	try{
			ports.load(new java.io.FileInputStream(new java.io.File((new java.net.URL(System.getProperty("jboss.server.config.url") + java.io.File.separator + "${projectId}-port.properties")).getFile())));
			if(ports.getProperty("https.port") == null || ports.getProperty("http.port") == null) {
				throw new RuntimeException("error.port.configuration");
			}
		}catch(java.io.IOException e){
			throw new RuntimeException("port.file.not.found");
		}
    
		request.getSession().invalidate();

		Object o = request.getSession();
		try {
			Field fieldSession = o.getClass().getDeclaredField("session");
			if (fieldSession != null) {
				fieldSession.setAccessible(true);
				Object session = fieldSession.get(o);
				session.getClass().getMethod("expire", new Class[]{} ).invoke(session, (Object[])null);
			}
		} catch (Exception e) {
			//do nothing
		}
		
		Set<String> keySet = request.getParameterMap().keySet();

		if (keySet != null) {
			for (String key : keySet) {
				if (key.indexOf("id") == 0) {
					Object value = request.getParameterMap().get(key);

					if (value instanceof String[])
						value = ((String[]) value)[0];

					if (value != null) {
						request.getSession().setAttribute(key, value);
					}
				}
			}
		}

		ActionForward forward = mapping.findForward("entrar.login");    	
    	response.sendRedirect("https://" + request.getServerName() + ":" + ports.getProperty("https.port") + "${contextoPrincipal}" + forward.getPath());
    	return null;
    }
}