// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: ApagaSessao.java.vsl in andromda-bpm4struts-cartridge-coppetec.
//
#set ($generatedFile = "ApagaSessao.java")
#if($stringUtils.isNotEmpty($controleAcessoDir))
package $controleAcessoDir;
#set ($generatedFile = "${stringUtils.replace($controleAcessoDir,'.','/')}/${generatedFile}")
#end

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.andromda.presentation.bpm4struts.ShareSessionUtil;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
#set ($packageUtil = "${customTypesPackage}.${stringUtils.replace($utilDir,'/','.')}")
import ${packageUtil}.Constantes;

public class ApagaSessao extends Action {

	private static String[] modulos = {"/prestacao/",
									   "/acompanhamento/",
									   "/administracao/",
									   "/execucao/",
									   "/gerencial/",
									   "/interfaces/",
									   "/participe/",
									   "/programa/",
									   "/proposta/"};
	
	
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
	{
		// apaga sessao
		request.getSession().invalidate();
		
		for (int i =0; i< (modulos.length-1); i++) {
			if (request.getRequestURI().contains(modulos[i])) {
				String uriForward = request.getScheme() + "://" + (request.getServerName() + (request.getServerPort( ) != 80 ? ":" + request.getServerPort( ) : "")).replace("//","/");
				ActionForward forward = new ActionForward(uriForward + "${contextoPrincipal}" + modulos[i+1]+ "secure/ApagaSessao.do", true);
				return forward;
			}
		}
		
/* o retorno nao eh mais necessario (ver implementacao de NovaConexao.java)	
// retorna para a acao NovaConexao do modulo principal
		ShareSessionUtil.getMapFromContext(request, getServlet().getServletContext().getContext("${contextoPrincipal}"));
		
		ActionForward forward = mapping.findForward("entrar.login");
    	
		String uriForward = request.getScheme() + "://" + (request.getServerName() + (request.getServerPort( ) != 80 ? ":" + request.getServerPort( ) : "")).replace("//","/");
		ActionForward forward = new ActionForward(uriForward + "${contextoPrincipal}" + "/secure/NovaConexao.do", true);

		return forward;*/
		
		return null;
	}

}
