#if(!$parameter.getJsp().oldStruts && $parameter.autocomplete)
#parse("templates/bpm4struts/actions/Action.java.vm")
#set($actionName = $parameter.name.subSequence(0,1).toUpperCase().concat("$parameter.name.substring(1)") )
#set($palavras = ${parameter.getJsp().getName().split(" ")})
#foreach($palavra in $palavras)
#set($aux=$palavra.subSequence(0,1).toUpperCase().concat("$palavra.substring(1)"))
#set($actionName = $actionName.concat("$aux"))
#end
#set($path = ${parameter.getJsp().getUseCase().getPackagePath()})
#set($package=$path.replace('/','.'))
#set($generatedFile = "${path}/${actionName}AutocompleteAction2.java")
#set($controllerClass = ${parameter.getJsp().getUseCase().getController()})
package ${package};

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts2.interceptor.ServletRequestAware;
import org.apache.struts2.interceptor.ServletResponseAware;
import org.apache.struts2.ServletActionContext;
import java.util.ArrayList;
import java.util.Iterator;
import java.io.PrintWriter;
import ${servletPackage}.ActionUtil;
import ${servletPackage}.Struts2ViewContainer;
import ${controleAcessoDir}.LoginControllerFactory;
import com.opensymphony.xwork2.ActionSupport;
import util.Constantes;
import ${parameter.getJsp().getUseCase().getController().fullyQualifiedName}Action2Factory;

#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
#if ($securityEnabled && !${action.useCase.openAccess})
public class ${actionName}AutocompleteAction2 extends ${controleAcessoDir}.Login2
#else
public class ${actionName}AutocompleteAction2 extends ActionSupport implements ServletRequestAware, ServletResponseAware
#end
{
#if (!($securityEnabled && !${$controllerClass.getUseCase().openAccess}))
	private HttpServletResponse response;
	private HttpServletRequest request;

	public void setServletResponse(HttpServletResponse response)
	{
		this.response = response;
	}

	public void setServletRequest(HttpServletRequest request)
	{
		this.request = request;
	}

	protected String __casoDeUso = "/${parameter.getJsp().getUseCase().getName()}";
	protected String __urlCasoDeUso = "/${parameter.getJsp().getUseCase().getName()}/${actionName}Autocomplete.action";
	protected String __modulo = "${parameter.getJsp().getUseCase().package.webModuleName}";
	protected String __contexto = "$stringUtils.replaceOnce(${parameter.getJsp().getUseCase().package.contexto}, ${contextoPrincipal}, "")";
#end

	private String query = new String();
	
	public void setQuery(String query) 
	{
		this.query = query;
	}
	
	public String getQuery()
	{
		return this.query;
	}

	public void saveErrorMessage(String message)
	{
		org.apache.struts.action.ActionMessages messages = (org.apache.struts.action.ActionMessages)request.getSession().getAttribute(org.apache.struts.Globals.MESSAGE_KEY);
		if (messages == null)
		{
			messages = new org.apache.struts.action.ActionMessages();
			request.getSession().setAttribute(org.apache.struts.Globals.MESSAGE_KEY, messages);
		}
		messages.add("org.andromda.bpm4struts.errormessages", new org.apache.struts.action.ActionMessage(message, null));
	}
	
	public void validate()
	{
		//Removendo mensagens antigas
		request.getSession().setAttribute(org.apache.struts.Globals.MESSAGE_KEY, new org.apache.struts.action.ActionMessages());
	}
	
#if ($securityEnabled && !${$controllerClass.getUseCase().openAccess})
	public String particularExecute() throws Exception
#else
#	public String execute() throws Exception
#end
	{		
		String forward = null;
		String redirect = "";
		request.getSession().setAttribute("form", null);
		
				
		boolean copyParameters = true;
		if (request.getSession().getAttribute(util.Constantes.COPY_PARAMETERS) != null) {
			copyParameters = (Boolean) request.getSession().getAttribute(util.Constantes.COPY_PARAMETERS);
			request.getSession().removeAttribute(util.Constantes.COPY_PARAMETERS);
		}

		org.apache.struts.validator.ValidatorForm form = null;
		
		forward = _autocomplete(form);
		

		if(request.getAttribute("$forwardKeyModule") != null && !request.getAttribute("$forwardKeyModule").equals("${parameter.getJsp().getUseCase().package.webModuleName}")){
			java.util.Enumeration atributosName = request.getSession().getAttributeNames();

			java.util.Map atributos = new java.util.HashMap();

			while(atributosName.hasMoreElements()){
				String atributo = (String)atributosName.nextElement();
				atributos.put(atributo, request.getSession().getAttribute(atributo));
			}

			org.andromda.presentation.bpm4struts.ShareSessionUtil.saveMapIntoContext(request, response, atributos, ServletActionContext.getServletContext().getContext("/SistemaAcademico"));

		}

		if (redirect != "") {//troca de modules - to be tested
			response.sendRedirect(redirect);
		}
		request.removeAttribute("$forwardKey");
		request.removeAttribute("$forwardKeyModule");
		
		return forward;
		
	}
	
	private String _autocomplete(org.apache.struts.validator.ValidatorForm form) throws java.lang.Exception
	{
		String forward = null;
#set($palavras = ${parameter.getJsp().getName().split(" ")})
#set($method=${parameter.name})
#foreach($palavra in $palavras)
#set($aux=$palavra.subSequence(0,1).toUpperCase().concat("$palavra.substring(1)"))
#set($method=$method.concat("$aux"))
#end
		${package}.${controllerClass.name}Action2Factory.get${controllerClass.name}Instance().${method}Autocomplete(new Struts2ViewContainer(this,request,response));
		
		return forward;		
	}
	
	private java.util.Map getInvalidatePageControlCounter(javax.servlet.http.HttpServletRequest request)
	{
		java.util.Map invalidatePageControlCounter = (java.util.Map)request.getSession().getAttribute("invalidatePageControlCounter");

		if(invalidatePageControlCounter == null)
		{
			invalidatePageControlCounter = new java.util.HashMap();
			request.getSession().setAttribute("invalidatePageControlCounter", invalidatePageControlCounter);
		}

		return invalidatePageControlCounter;
	}
	
	public void loadUseCaseInfo()
	{
		__casoDeUso = "${parameter.getJsp().getUseCase().getName()}";
		__urlCasoDeUso = "/${parameter.getJsp().getUseCase().getName()}/${actionName}Autocomplete.action";
		__modulo = "${parameter.getJsp().getUseCase().package.webModuleName}";
		__contexto = "$stringUtils.replaceOnce(${parameter.getJsp().getUseCase().package.contexto}, ${contextoPrincipal}, "")";
	}
}
#end