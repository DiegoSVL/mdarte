##
##
##      This macro takes care of rendering the appropriate Struts
##      HTML hyperlink tags for the argument action
##
##
#macro ( renderHyperlink2 $action $indent )
#set ($roles = $action.actionRoles)
#set ($trigger = $action.actionTrigger)
#set ($triggerKey = $trigger.triggerKey)
#set ($parameters = $action.actionParameters)
#set ($formBeanName = $action.useCase.formKey)
###set($useCaseName = $action.useCase.name)
#set($useCaseName = "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action")
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
###if ($securityEnabled)
##${indent}<logic:present role="$roles">
###end
##
#set($actionEnd = ".do")
#if(!${action.actionOldStruts})
#set($actionEnd = ".action")
#end
#set($prefixoLink = ${action.useCase.package.contexto})
#if ($action.useCase.package.contexto == ${contextoPrincipal})
#set ($prefixoLink = ${contextoPrincipal})
#end
#set ($requestPath = "${prefixoLink}${action.actionPath}${actionEnd}")
#set ($separator = "?")
#foreach ($parameter in $parameters)
#if ($parameter.defaultValuePresent)
#set ($parameterValue = "$parameter.defaultValue")
#else
#set ($parameterValue = "${${formBeanName}.${parameter.name}}")
#end
#if($velocityCount > 1)#set($separator = "&")#end
#set ($requestPath = "${requestPath}${separator}${parameter.name}=${parameterValue}")
#end
#set($valueOperationMode = "")
#set($valueOperationMode = $action.findTaggedValue("$operationMode"))
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	<security:containsOperationMode value="$valueOperationMode" useCase="${useCaseName}">
#end
#if ($securityEnabled && !${action.useCase.openAccess}) 
           <security:containsPermission name="$triggerKey">
#end
            <p>
                <a id="hyperLink${action.actionName.replace(' ','')}" href="${requestPath}" >
                    <s:property value="%{getText('$triggerKey')}" />
                </a>
            </p>
#if ($securityEnabled && !${action.useCase.openAccess}) 
           </security:containsPermission>
#end
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	</security:containsOperationMode>
#end
#end

#macro ( renderFieldHyperlink2 $action $field $indent )
#set ($trigger = $action.actionTrigger)
#set ($triggerKey = $trigger.triggerKey)
#set ($parameters = $action.actionParameters)
#set ($formBeanName = $action.useCase.formKey)
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
###set($useCaseName = $action.useCase.name)
#set($useCaseName = "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action")
##
#set($actionEnd = ".do")
#if(!${action.actionOldStruts})
#set($actionEnd = ".action")
#end
##
#set($prefixoLink = ${action.useCase.package.contexto})
#if ($action.useCase.package.contexto == ${contextoPrincipal})
#set ($prefixoLink = ${contextoPrincipal})
#end
#set ($requestPath = "${prefixoLink}${action.actionPath}${actionEnd}")
#set ($separator = "?")
#foreach ($parameter in $parameters)
#if ($parameter.defaultValuePresent)
#set ($parameterValue = "$parameter.defaultValue")
#else
#set ($parameterValue = "${${formBeanName}.${parameter.name}}")
#end
#if($velocityCount > 1)#set($separator = "&")#end
#set ($requestPath = "${requestPath}${separator}${parameter.name}=${parameterValue}")
#end
#set($valueOperationMode = "")
#set($valueOperationMode = $action.findTaggedValue("$operationMode"))
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	<security:containsOperationMode value="$valueOperationMode" useCase="${useCaseName}">
#end
#if ($securityEnabled && !${action.useCase.openAccess}) 
           <security:containsPermission name="$triggerKey">
#end
            <p>
                <a id="${field.name}${action.useCase.name}" href="${requestPath}" #if($hints)onmouseover="hints.show('$field.hintKey', '$styleId')" title="" onmouseout="hints.hide()"#end>
                   <c:out value="${__value}"/>
                </a>
            </p>
#if ($securityEnabled && !${action.useCase.openAccess}) 
           </security:containsPermission>
#end
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	</security:containsOperationMode>
#end
#end
##
##
##      This macro takes care of rendering the appropriate Struts
##      HTML hyperlink tags for the argument action in a table
##
##
#macro ( renderTableHyperlink2 $action $columnName $indent )
#set($uriQuery='')#set($delim='?')#set($beanName="row")
###set($useCaseName = $action.useCase.name)
#set($useCaseName = "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action")
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
#foreach ($parameter in $action.actionParameters)
## temporarily commented out, we're taking all parameters from the row since we can't easily check if the row property
## is missing the property (reflection is not supported in taglibs nor JSTL EL)
## the idea was to take a property from the action form when it is not defined on the row class
##if(!$action.tableLinkParameter.tableColumnNames.contains($parameter.name))#set($beanName=$formName)#end
#set($paramValue="${beanName}.${parameter.name}")#set($uriQuery="${uriQuery}${delim}${parameter.name}=${${paramValue}}")#set($delim='&')
#end
#set($valueOperationMode = "")
#set($valueOperationMode = $action.findTaggedValue("$operationMode"))
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	<security:containsOperationMode value="$valueOperationMode" useCase="${useCaseName}">
#end
#if ($securityEnabled && !${action.useCase.openAccess}) 
           <security:containsPermission name="$action.actionTrigger.triggerKey">
#end
#set($actionEnd = ".do")
#if(!${action.actionOldStruts})
#set($actionEnd = ".action")
#end
#set($prefixoLink = ${action.useCase.package.contexto})
#if ($action.useCase.package.contexto == ${contextoPrincipal})
#set ($prefixoLink = ${contextoPrincipal})
#end
##
	        <a id="tableHyperlink${action.name.replace(' ','')}" href="${prefixoLink}${action.actionPath}${actionEnd}${uriQuery}" #if($hints)onmouseover="hints.show('$action.actionTrigger.name')" onmouseout="hints.hide()"#end>
#if ($action.tableLinkColumnName)## the action is targetting a column, so display the table cell value
#set($linkValue="${beanName}.${columnName}")
            ${${linkValue}}
#else
		         <s:property value="%{getText('$action.actionTrigger.triggerKey')}" />
#end
			</a>
#if ($securityEnabled && !${action.useCase.openAccess}) 
		   </security:containsPermission>
#end
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	</security:containsOperationMode>
#end

#end
##
##
##      This macro takes care of rendering the appropriate Struts
##      HTML hyperlink tags for the argument action in a table
##
##
#macro ( renderTableButtonStruts2 $action $indent $rowIndex )
#set($linkParameters="")
###set($useCaseName = $action.useCase.name)
#set($useCaseName = "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action")
#set($delim='?')
#set($beanName="row")
#set ($parameterCount = $action.actionParameters.size())
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
#foreach ($parameter in $action.actionParameters)
## temporarily commented out, we're taking all parameters from the row since we can't easily check if the row property
## is missing the property (reflection is not supported in taglibs nor JSTL EL)
## the idea was to take a property from the action form when it is not defined on the row class
##if(!$action.tableLinkParameter.tableColumnNames.contains($parameter.name))#set($beanName=$formName)#else#set($beanName="row")#end
#set($linkParameters="${linkParameters}${delim}${parameter.name}=")
#if ($parameter.widgetType == 'plaintext')
#set($linkParameters="${linkParameters}${${beanName}.${parameter.name}}")
#set ($delim = '&')
#else
#if ($parameter.defaultValuePresent)
#set($linkParameters="${linkParameters}${parameter.defaultValue}'")
#else
#set($linkParameters="${linkParameters}'+getDiv('$parameter.styleId$rowIndex').value")
#end
#set ($delim = "+'&")
#end
#end
## properly add a suffix when that last entry was an updateable field so the javascript does not have
## an unclosed literal
#set($actionEnd = ".do")
#if(!${action.actionOldStruts})
#set($actionEnd = ".action")
#end
#set($prefixoLink = ${action.useCase.package.contexto})
#if ($action.useCase.package.contexto == ${contextoPrincipal})
#set ($prefixoLink = ${contextoPrincipal})
#end
        <c:set var="link">'${prefixoLink}${action.actionPath}${actionEnd}${linkParameters}#if($delim!="+'&")'#end</c:set>
#set ($valueConfirmMessage = "")
#set ($valueConfirmMessage = $action.findTaggedValue("$confirmMessage"))
#set($valueOperationMode = "")
#set($valueOperationMode = $action.findTaggedValue("$operationMode"))
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	<security:containsOperationMode value="$valueOperationMode" useCase="${useCaseName}">
#end
#if ($action.imageLink)
#if ($securityEnabled && !${action.useCase.openAccess}) 
		<security:containsPermission name="$action.imageMessageKey">
#end
        <nobr><a id="imageLink${action.name}" href="javascript:document.location=${link};" class="imageLink" ><img src="<s:url value='%{getText($action.imageMessageKey)}'"/> /></a></nobr>
#else
#if ($securityEnabled && !${action.useCase.openAccess}) 
           <security:containsPermission name="$action.messageKey">
#end
        <nobr><a id="buttonLink${action.name}" href="javascript:document.location=${link};" class="buttonLink" ><s:property value="%{getText('$action.messageKey')}" /></a></nobr>
#end
#if ($securityEnabled && !${action.useCase.openAccess}) 
           </security:containsPermission>
#end
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	</security:containsOperationMode>
#end
#end

#macro (renderTableLookupGrid2 $action $indent $rowIndex)
#set($linkParameters="")
###set($useCaseName = $action.useCase.name)
#set($useCaseName = "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action")
#set($beanName="row")
#set($delim = " ")
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
#set($fieldLinkValue = $action.findTaggedValue("$fieldLink"))
#set($i = 0)
#foreach ($parameter in $action.actionParameters)
#set($linkParameters="${${beanName}.${parameter.name}}")
#set($param = $action.getFieldLinkAsList().get($i))
#set($teste = "var param${i} = window.parent.opener.document.getElementsByName('$param');if(param${i}[0] != null){param${i}[0].value = '${linkParameters}'}")
#set($delim = "${delim}${teste}")
#set($i = $i + 1)
#end

## properly add a suffix when that last entry was an updateable field so the javascript does not have
## an unclosed literal
#set ($valueConfirmMessage = "")
#set ($valueConfirmMessage = $action.findTaggedValue("$confirmMessage"))
#set($valueOperationMode = "")
#set($valueOperationMode = $action.findTaggedValue("$operationMode"))
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	<security:containsOperationMode value="$valueOperationMode" useCase="${useCaseName}">
#end

#if ($securityEnabled && !${action.useCase.openAccess}) 
		<security:containsPermission name="$action.imageMessageKey">
#end
	    <nobr><a href="" class="buttonLink btn-close" onclick="${delim};window.close()"><s:property value="%{getText('$action.messageKey')}" /></a></nobr>
##<html:link href="" styleClass="buttonLink" onclick="var param = window.parent.opener.document.getElementsByName('nome');if(param[0] != null){param[0].value = '${row.nome}'};window.close()"><bean:message key="lookup.grid.uc.resultado.consulta.nome.voltar"/></html:link>
#if ($securityEnabled && !${action.useCase.openAccess}) 
           </security:containsPermission>
#end
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	</security:containsOperationMode>
#end
#end

#macro (renderLookupGrid2 $action)
#set ($messageKey = $action.messageKey)
#set ($trigger = $action.actionTrigger)
###set($useCaseName = $action.useCase.name)
#set($useCaseName = "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action")
#set ($roles = $action.actionRoles)
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
#set ($valueConfirmMessage = $action.findTaggedValue("$confirmMessage"))						  
#set($valueOperationMode = "")
#set($valueOperationMode = $action.findTaggedValue("$operationMode"))
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	<security:containsOperationMode value="$valueOperationMode" useCase="${useCaseName}">
#end
#if ($securityEnabled && !${action.useCase.openAccess})
    <security:containsPermission name="$trigger.triggerKey">
#end
	    <input class="btn btn-small btn-primary"id="lookupGrid${action.actionName.replace(' ','')}"name="${action.actionName}" value="<s:property value="%{getText('$trigger.triggerKey')}" />""  type="button" /> 
#if ($securityEnabled && !${action.useCase.openAccess})
    </security:containsPermission>
#end
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	</security:containsOperationMode>
#end
#if ($action.resettable)
   <s:reset id="reset${action.actionName.replace(' ','')}" value="%{getText('$trigger.resetMessageKey')}"/> 
#end
#end
##
##
##      Esta macro foi criada por Milene Fiorio e Rodrigo Castilho
##      Esta macro renderiza os botï¿½es de uma pagina
##
##
#macro ( renderFormButtonsCustomizado2 $action $indent )
#set ($messageKey = $action.messageKey)
#set ($trigger = $action.actionTrigger)
###set($useCaseName = $action.useCase.name)
#set($useCaseName = "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action")
#set ($roles = $action.actionRoles)
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
#set ($valueConfirmMessage = $action.findTaggedValue("$confirmMessage"))						  
###if ($securityEnabled)
##${indent}<logic:present role="$roles">
###end
#set($valueOperationMode = "")
#set($valueOperationMode = $action.findTaggedValue("$operationMode"))
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	<security:containsOperationMode value="$valueOperationMode" useCase="${useCaseName}">
#end
#if ($securityEnabled && !${action.useCase.openAccess})
	<security:containsPermission name="$trigger.triggerKey">
#end
	    <input id="${action.actionName.toString().replace(' ','')}" class="btn btn-primary" name="${action.actionName.toString().replace(' ','')}" value="<s:property value="%{getText('$trigger.triggerKey')}" />" type="button"/>
#if ($securityEnabled && !${action.useCase.openAccess})
   </security:containsPermission>
#end
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	</security:containsOperationMode>
#end
#if ($action.resettable)
	<input id="reset${action.actionName.toString().replace(' ','')}" class="btn btn-primary" type="button" name="${action.actionName}" value="<s:property value="%{getText('$trigger.triggerKey')}" />" />
#end
###if ($securityEnabled)
##${indent}</logic:present>
##${indent}<logic:notPresent role="$roles">
##${indent}   <security:containsPermission name="$trigger.triggerKey">
##${indent}   <html:button #if($hints)onmouseover="hints.show('${trigger.name}_no')" onmouseout="hints.hide()"#end disabled="true" styleId="form_submit" onclick="setaAcao('${action.actionPath}', '${action.formValidationMethodName}', ${action.validationRequired})" property="${action.actionName}">
##${indent}       <bean:message key="$trigger.triggerKey"/>
##${indent}   </html:button>
##${indent}   </security:containsPermission>
###if ($action.resettable)
##${indent}   <html:reset #if($hints)onmouseover="hints.show('${trigger.name}_noreset')" onmouseout="hints.hide()"#end disabled="true" styleId="form_reset">
##${indent}       <bean:message key="$trigger.resetMessageKey"/>
##${indent}   </html:reset>
###end
##${indent}</logic:notPresent>
##end
#end
##
##
##      This macro takes care of rendering the appropriate Struts tags
##      for the argument form field
####
#macro ( renderFormField2 $action $field $rowIndex $indent)
#set ($quote ='"')
#set ($fieldName = $field.name)
#set ($formBeanName = $action.useCase.formKey)## used to denote the request scope form
#if($field.fieldRowCount)#set($rowCount=" rows=$quote$field.fieldRowCount$quote")#else#set($rowCount='')#end
#if($field.fieldColumnCount)#set($columnCount=" size=$quote$field.fieldColumnCount$quote")#else#set($columnCount='')#end
#if($rowIndex=='')#set($beanName=$formBeanName)#else#set($beanName="row")#end
#set ($styleId = "$field.styleId$rowIndex")
#if($field.habilitadoPor)
#set ($disabled = 'disabled="true"')
#else
#set ($disabled = '')
#end
#set($eventosKeyUp = 'onkeyup="verifica()"')
#set($eventosMouseUp = 'onmouseup="verifica()"')
#set($eventosKeyPress = 'onkeypress="keySubmit(event)"')
#if ($field.readOnly)
#set ($readonly = 'readonly="readonly"')
#else
#set ($readonly = '')
#end
#set ($propertyValue = "${beanName}.${fieldName}")
#set($requiredness = ($clientValidation || $serverValidation))
#if ($field.type.dateType && $beanName=="row")
	<fmt:formatDate var="value" value="${${propertyValue}}" pattern="$field.dateFormat"/>
#else
	<s:set name="__value" value="#session.${propertyValue}"/>
#end
##
##  Depending on the type of the input field we render a different widget
##
##
##      R A D I O B U T T O N
##
#if ($field.radioButton)
	<div id="div${field.name}${action.useCase.name}" class="radio field">
#if ($requiredness && $field.required)<label class="radioLabel" for="${field.name}${action.useCase.name}"><bean:message key="$field.messageKey"/> *</label>#else<label class="radioLabel"><bean:message key="$field.messageKey"/></label>#end<br class="clear"/>
#if ($field.optionKeys.empty)
		<s:radio id="${field.name}${action.useCase.name}" label="$field.name" name="$field.name" list="#session.form.${field.name}ComboList"  title="" />
	</div><div class="clear"></div>
#else
#foreach ($optionKey in $field.optionKeys)
#set ($optionIndex = $velocityCount - 1)
	    <s:radio id="${field.name}${action.useCase.name}" label="$field.name" name="$field.name" list="#{${optionIndex} : getText('${optionKey}')}"  title="" />
#end
	</div><br class="clear"/>
#end
##
##      C H E C K B O X
##
#elseif($field.checkbox)
	<div id="div${field.name}${action.useCase.name}" class="checkbox field">
		#if ($requiredness && $field.required)<label class="checkboxLabel"><bean:message key="$field.messageKey"/> *</label>#else<label class="checkboxLabel"><bean:message key="$field.messageKey"/></label>
		#end
		<input type="checkbox"  id="${field.name}${action.useCase.name}" name="$fieldName" value="on" <c:if test="${__value}">checked="checked" </c:if> title=""  $disabled /><br class="clear"/>
	</div>
##
##      M U L T I B O X
##
## @todo: disable this widget if not used in a row action
#elseif($field.custom)
#set($path = ${field.getJsp().getUseCase().getPackagePath()})
#set($file = "${path}/${field.name}.jsp")
	<tiles:insert page="${field.name}.jsp" flush="false"/>
#elseif ($field.multibox)
	<div id="div${field.name}${action.useCase.name}" class="multibox field">
		#if ($requiredness && $field.required)<label class="multiboxLabel" for="${field.name}${action.useCase.name}"><bean:message key="$field.messageKey"/> *</label>#else<label class="multiboxLabel"><bean:message key="$field.messageKey"/></label>
		#end
		<s:checkboxlist id="${field.name}${action.useCase.name}" name="$fieldName" listKey="value" listValue="label" list="#session.form.${field.backingListName}"/>
	</div><br class="clear"/>
##
##     P A S S W O R D
##
#elseif ( ($field.password) )
	<div id="div${field.name}${action.useCase.name}" class="password field">
		#if ($requiredness && $field.required)<label class="passwordLabel" for="${field.name}${action.useCase.name}"><bean:message key="$field.messageKey"/> *</label>#else<label class="passwordLabel"><bean:message key="$field.messageKey"/></label>
		#end
        <s:password id="${field.name}${action.useCase.name}" name="$fieldName" label="%{getText('$field.messageKey')}" value="%{#value}" $disabled  title=""  $readonly$columnCount id="$styleId"/>
	</div>
##      T E X T F I E L D       &       P A S S W O R D
##
#elseif ( ($field.textField) && $field.calendarRequired )
	<div id="div${field.name}${action.useCase.name}" class="input-append date field" >
		#if ($requiredness && $field.required)
		<label class="dateLabel" for="${field.name}${action.useCase.name}"><bean:message key="$field.messageKey"/> *</label>#else<label class="multiboxLabel"><bean:message key="$field.messageKey"/></label>
		#end
        <input  class="span2" type="text" id="${field.name}${action.useCase.name}" data-date-format="dd/mm/yyyy" name="${fieldName}" size="80" />
		<span class="add-on"><i class="icon-th"></i></span>
	</div>
#elseif ($field.autocomplete )
	<div id="div${field.name}${action.useCase.name}" class="textfield field autocomplete">
	#if ($requiredness && $field.required)<label class="textfieldLabel" for="${field.name}${action.useCase.name}"><bean:message key="$field.messageKey"/> *</label>#else<label class="textfieldLabel" for="${field.name}"><bean:message key="$field.messageKey"/></label>
	#end
		<s:textfield id="${field.name}${action.useCase.name}" name="$fieldName" label="%{getText('$field.messageKey')}" autocomplete="off" data-provide="typeahead" value="%{#form.$propertyValue}" $disabled  title=""  $readonly $columnCount styleId="$styleId"  />
	</div>
#elseif ( ($field.textField) )
	<div id="div${field.name}${action.useCase.name}" class="textfield field">
	#if ($requiredness && $field.required)<label class="textfieldLabel" for="${field.name}${action.useCase.name}"><bean:message key="$field.messageKey"/> *</label>#else<label class="textfieldLabel" for="${field.name}"><bean:message key="$field.messageKey"/></label>
	#end
		<s:textfield id="${field.name}${action.useCase.name}" name="$fieldName" label="%{getText('$field.messageKey')}" value="%{#form.$propertyValue}" $disabled  title=""  $readonly $columnCount styleId="$styleId"  />
	</div>
#elseif ($field.money)
	<div id="div${field.name}${action.useCase.name}" class="money field">
		#if ($requiredness && $field.required)<label class="moneyLabel" for="${field.name}${action.useCase.name}"><bean:message key="$field.messageKey"/> *</label>#else<label class="moneyLabel" for="${field.name}"><bean:message key="$field.messageKey"/></label>#end
		<input type="text" id="${field.name}${action.useCase.name}" name="$fieldName" value="<c:out value="${__value}"/>" $disabled  title="" $readonly$columnCount styleId="$styleId" />
		<br class="clear"/>	
	</div>
##
##      T E X T A R E A 
##
#elseif ($field.textArea)
	<div id="div${field.name}${action.useCase.name}" class="textarea field">
		#if ($requiredness && $field.required)<label class="textareaLabel"><bean:message key="$field.messageKey"/> *</label>#else<label class="textareaLabel"><bean:message key="$field.messageKey"/></label>#end
        <textarea name="$fieldName" id="${field.name}${action.useCase.name}"  $readonly$rowCount$columnCount $disabled id="${fieldName}${action.useCase.name}"><c:out value="${__value}"/></textarea>
	</div>
##
##      M O N E Y
##
#elseif ($field.money)
	<div id="div${field.name}${action.useCase.name}" class="money field">
		#if ($requiredness && $field.required)<label class="moneyLabel" for="${field.name}${action.useCase.name}"><bean:message key="$field.messageKey"/> *</label></nobr>#else<label class="moneyLabel"><bean:message key="$field.messageKey"/></label>#end
        <input type="text" id="${field.name}${action.useCase.name}" name="$fieldName" value="<c:out value="${__value}"/>" $disabled  $readonly$columnCount styleId="$styleId"/>
	</div>
##
##      H I D D E N
##
#elseif ($field.hiddenField)
	<div id="div${field.name}${action.useCase.name}" class="hidden field">
		#if ($requiredness && $field.required)<label for="${field.name}${action.useCase.name}"><bean:message key="$field.messageKey"/> *</label>#else<label><bean:message key="$field.messageKey"/></label>#end
		<input type="hidden" name="${field.name}" value="<c:out value="${__value}"/>" id="${field.name}${action.useCase.name}" $disabled  />
	</div>
##
##      C O M B O B O X     &      L I S T
##
#elseif ($field.combobox)
	<div id="div${field.name}${action.useCase.name}" class="combobox field">
		#if ($requiredness && $field.required)<label class="comboboxLabel" for="${field.name}${action.useCase.name}"><bean:message key="$field.messageKey"/> *</label>#else<label class="comboboxLabel"><bean:message key="$field.messageKey"/></label>#end
#if ($field.readOnly)#set ($disabled = 'disabled="true"')#end
#if($field.multiple)#set($multiple='multiple="multiple"')#else#set($multiple='')#end
#if($field.type.collectionType)#set($selectProperty="${fieldName}AsArray")#else#set($selectProperty="$fieldName")
#end
		<s:select id="${field.name}${action.useCase.name}" label="" name="${field.name}" headerKey="" headerValue="" list="#session.form.${field.name}ComboList"/>
	</div>
##
##	D O U B L E   S E L E C T
##
#elseif ($field.doubleSelect)
	<div id="div${field.name}${action.useCase.name}" class="doubleSelect field">
		#if ($requiredness && $field.required)<label class="doubleSelectLabel" for="${field.name}${action.useCase.name}"><bean:message key="$field.messageKey"/> *</label>#else<label class="doubleSelectLabel"><bean:message key="$field.messageKey"/></label>#end
#if ($field.readOnly)#set ($disabled = 'disabled="true"')#end
#set($multiple='')
#set($selectProperty="$fieldName")
    	<s:doubleselect id="${field.name}${action.useCase.name}" name="$selectProperty" list="#session.form.${field.name}Map.keySet()"
    		listKey="value" listValue="label"
    		doubleName="${selectProperty}__Double" doubleList="#session.form.${field.name}Map.get(top)"
    		doubleListKey="value" doubleListValue="label" />
	</div>

##
##      L I N K
##
#elseif ($field.hyperlink)
#foreach ($_action in $jsp.actions)
#if ($_action.hyperlink && $_action.findTaggedValue("$fieldLink"))
#set($fieldLinkValue = "")
#set($fieldLinkValue = $_action.findTaggedValue("$fieldLink"))
#if($fieldLinkValue.equals("$fieldName"))
#renderFieldHyperlink2($_action $field "	")
#end
#end
#end
##
##      F I L E
##
#elseif ($field.file)
	<div id="div${field.name}${action.useCase.name}" class="file field">
		#if($requiredness && $field.required)<label class="fileLabel" for="${field.name}${action.useCase.name}"><bean:message key="$field.messageKey"/> *</label>#else<label class="fileLabel"><bean:message key="$field.messageKey"/></label>#end
		<s:file id="${field.name}${action.useCase.name}" name="$fieldName"  $disabled $columnCount styleId="$styleId"/>
	</div
##
##      P L A I N T E X T
##
#elseif ($field.strutsAction.tableLink)
## we could also test for widget type == 'plaintext', but that would be redundant here
	<div id="div${field.name}${action.useCase.name}" class="hidden field">
		##if($requiredness && $field.required)<label class="fileLabel" for="${field.name}${action.useCase.name}"><bean:message key="$field.messageKey"/> *</label>#else<label class="fileLabel"><bean:message key="$field.messageKey"/></label>#end
		<input id="${field.name}${action.useCase.name}" type="hidden" name="${field.name}" value="<c:out value="${__value}"/>" />
	</div>
#else
	<div id="div${field.name}${action.useCase.name}" class="exibir field">
		<label class="exibirLabel"><bean:message key="$field.messageKey"/></label>
		<p><s:property value="#session.${propertyValue}" /></p>
	</div>
#end
##${indent}<label id="$field.name"><c:out value="${__value}"/></label>
#end
#macro(cleanButton2 $action $indent)
#if($action.findTaggedValue("$cleanTable").equals("true"))
		<script type="text/javascript">

			function clean(){
		
				
		
					document.forms[0].reset();
					$parameters = $action.actionParameters;
					for($field in $parameters){
				
						if(!($field.select || $field.radioButton || $field.checkbox || $field.multibox ||$field.doubleSelect)){
							document.getElementById("$field.styleId").value="";
						}		
					}
				
			}
	
		</script>

		<input id="clean${action.useCase.name}" class="btn btn-mini btn-clean" type="button" value="clean"><!--Clean()-->

#end
#end
