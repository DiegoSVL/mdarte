##
##  CONSTANTS
##
#foreach ($field in $action.actionFormFields)
#if($field.required || ($field.validatorVars && !$field.validatorVars.isEmpty()))
#set($gerar = true)
#end
#end
#if($struts2 == "true")
#if($applicationUseCases)
#if($modulo == 'true')
#set($gerar = false)
#end
#end
#else
#set($gerar = false)
#end
#if(${action.useCase.name} == ${action.actionClassName})
#set($gerar = false)
#end
##
##  START TEMPLATE
##
#if($gerar)
#set ($generatedFile = "${action.fullActionPath}-validation.xml")
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE validators PUBLIC
"-//OpenSymphony Group//XWork Validator 1.0.2//EN"
"http://www.opensymphony.com/xwork/xwork-validator-1.0.2.dtd">
<!-- Generated by bpm4struts2/configuration/validator.xml.vsl-->
<validators>
#foreach ($field in $action.actionFormFields)
#if($field.validatorVars && !$field.validatorVars.isEmpty())
#if(${field.required} || ${field.type.name}=="String" || ${field.type.name}=="Date" || 	${field.type.name}=="int" || ${field.type.name}=="Integer" || ${field.type.name}=="float" || ${field.type.name}=="Float" ||	${field.type.name}=="double" || ${field.type.name}=="Double" )

	<field name="${field.name}">
		
#if(${field.required})
#if(${field.type.name}=="String")
		<field-validator type="requiredstring">
			<message>Required string validation wrong</message>
		</field-validator>
		
#end
		<field-validator type="required">
			<message>Required validation wrong</message>
		</field-validator>
		
#end
#if(${field.type.name}=="Date")
		<field-validator type="date">
			<message>Date validation wrong</message>
#end
#if(${field.type.name}=="int" || ${field.type.name}=="Integer")
		<field-validator type="int">
			<message>Int validation wrong</message>
#end
#if(${field.type.name}=="long" || ${field.type.name}=="Long")
		<field-validator type="long">
			<message>Long validation wrong</message>
#end
#if(${field.type.name}=="float" || ${field.type.name}=="Float" ||	${field.type.name}=="double" || ${field.type.name}=="Double" )
		<field-validator type="double">
			<message>Double validation wrong</message>
#end
#foreach ($validatorVar in $field.validatorVars)
#if ($validatorVar.get(0)=="range" && (${field.type.name}=="long" || ${field.type.name}=="Long" || ${field.type.name}=="int" || ${field.type.name}=="Integer"))
			<param name="min">$validatorVar.get(1)</param>
			<param name="max">$validatorVar.get(2)</param>

#elseif ($validatorVar.get(0)=="range" && (${field.type.name}=="float" || ${field.type.name}=="Float" ||	${field.type.name}=="double" || ${field.type.name}=="Double"))
			<param name="minInclusive">$validatorVar.get(1)</param>
			<param name="maxInclusive">$validatorVar.get(2)</param>
#end

#end
#if(${field.type.name}=="Date" || 	${field.type.name}=="int" || ${field.type.name}=="Integer" || 	${field.type.name}=="float" || ${field.type.name}=="Float" ||	${field.type.name}=="double" || ${field.type.name}=="Double" )
		</field-validator>

#end
#foreach ($validatorVar in $field.validatorVars)
#if ($validatorVar.get(0)=="pattern" && ${field.type.name}=="String")
		<field-validator type="regex">
			<param name="expression">$validatorVar.get(1)</param>
			<message>Regex validation wrong</message>
		</field-validator>
#elseif ($validatorVar.get(0)=="email" && ${field.type.name}=="String")
		<field-validator type="email">
			<message>Email validation wrong</message>
		</field-validator>
#elseif ($validatorVar.get(0)=="minlength" && ${field.type.name}=="String")
		<field-validator type="stringlength">
			<param name="minLength">$validatorVar.get(1)</param>
			<message>minLength validation wrong</message>
		</field-validator>
#elseif ($validatorVar.get(0)=="maxlength" && ${field.type.name}=="String")
		<field-validator type="stringlength">
			<param name="maxLength">$validatorVar.get(1)</param>
			<message>maxLength validation wrong</message>
		</field-validator>
#elseif (${field.type.name}=="Date")
		<field-validator type="regex">
#if ($validatorVar.get(0)=="strict") 
			<param name="expression">$validatorVar.get(1)</param>
#else
			<param name="expression">$validatorVar.get(0)</param>
#end
			<message>Date pattern validation wrong</message>
		</field-validator>
#end

#end
	</field>
#end
#end
#end
</validators>
#end